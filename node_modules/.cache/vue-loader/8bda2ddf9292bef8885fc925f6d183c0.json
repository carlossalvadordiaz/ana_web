{"remainingRequest":"C:\\Users\\USER\\Desktop\\web_ana\\ana_web\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\USER\\Desktop\\web_ana\\ana_web\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\USER\\Desktop\\web_ana\\ana_web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\USER\\Desktop\\web_ana\\ana_web\\src\\views\\animales.vue?vue&type=template&id=7b713678&scoped=true&","dependencies":[{"path":"C:\\Users\\USER\\Desktop\\web_ana\\ana_web\\src\\views\\animales.vue","mtime":1653477686677},{"path":"C:\\Users\\USER\\Desktop\\web_ana\\ana_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\USER\\Desktop\\web_ana\\ana_web\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\USER\\Desktop\\web_ana\\ana_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\USER\\Desktop\\web_ana\\ana_web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}